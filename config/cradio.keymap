/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define XXX &none
#define ___ &trans

#define SK(KEY) &nk KEY KEY
#define MO(LAYER) &mo_tap LAYER F24

// Keep sticky keys active for a long time so they effectively do not time out
#define STICKY_KEY_TIMEOUT 60000

#define BASE 0
#define NAV_L 1
#define BT_L 2
#define FUN_L 3

//	0	1	2	3	4		5	6	7	8	9 
//	10	11	12	13	14		15	16	17	18	19
//	20	21	22	23	24		25	26	27	28	29
//				30	31		32	33
// 		>;

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
	&lt { quick_tap_ms = <200>; }; 
/ {

	combos {
		#include "combos.keymap"
	};
	behaviors {
	sh: shift {
		compatible = "zmk,behavior-hold-tap";
 		label = "shift mod";
 		#binding-cells = <2>;
 		tapping_term_ms = <150>;
 		flavor = "hold-preferred";
 		bindings = <&kp>, <&kp>;
	};
      hm: balanced_homerow_mods {
	    compatible = "zmk,behavior-hold-tap";
	    #binding-cells = <2>;
	    tapping-term-ms = <200>;    // <---[[moderate duration]]
	    quick-tap-ms = <0>;
	    flavor = "balanced";
	    bindings = <&kp>, <&kp>;
	};
	lp: lp_mod {
		compatible = "zmk,behavior-hold-tap";
		label = "lpmod";
		#binding-cells = <2>;
		tapping_term_ms = <150>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&lparen>;
	};
	rp: rp_mod {
		compatible = "zmk,behavior-hold-tap";
		label = "rpmod";
		#binding-cells = <2>;
		tapping_term_ms = <150>;
		flavor = "tap-preferred";
		bindings = <&kp>, <&rparen>;
	};
	skq: sticky_key_quick_release {
		compatible = "zmk,behavior-sticky-key";
		label = "STICKY_KEY_QUICK_RELEASE";
		#binding-cells = <1>;
		bindings = <&kp>;
		quick-release;
		release-after-ms = <STICKY_KEY_TIMEOUT>;
	};
 	lparen: l_paren {
		compatible = "zmk,behavior-mod-morph";
		label = "L_PAREN";
		#binding-cells = <0>;
		bindings = <&kp COMMA>, <&kp LPAR>;
		mods = <(MOD_LSFT|MOD_RSFT)>;
	};
	rparen: r_paren {
		compatible = "zmk,behavior-mod-morph";
		label = "R_PAREN";
		#binding-cells = <0>;
		bindings = <&kp DOT>, <&kp RPAR>;
		mods = <(MOD_LSFT|MOD_RSFT)>;
	};

};


keymap {
		compatible = "zmk,keymap";
	default_layer {
		label = "Felix";
		bindings = <
	&sh LALT Q	&kp W		&kp E		&kp R		&kp T				&kp Y		&kp U		&kp I		&kp O		&kp P
	&hm LSFT A  	&hm LGUI S  	&hm LALT D  	&hm LCTL F	&kp G   			&kp H      	&hm RCTL J   	&hm RALT K   	&hm RGUI L     	&hm RSFT APOS
	&sh LSFT Z	&kp X		&kp C		&kp V		&kp B				&kp N		&kp M		&kp COMMA	&kp DOT		&sh RSFT FSLH 
							&lt NAV_L ESC	&kp BSPC			&kp SPACE	&kp RET			
	>;
	};		

	
	
	nav_layer {
		label = "Nav";
		bindings = <
	&kp LS(TAB) 		&kp LA(BSPC)		&kp UP		&kp LA(DEL) 	&kp TAB			&kp LA(LG(ESC))	&none		&kp LBRC	&kp RBRC 	&kp BSLH
	&sh LALT LA(LEFT)	&kp LEFT		&kp DOWN	&kp RIGHT	&kp LA(RIGHT)		&none		&kp LG(Z)	&kp LS(LG(Z))	&kp COLON	&kp SEMI 
	&sh LSFT HOME 		&hm LCTRL LG(LEFT)	&hm LGUI RET	&kp LG(RIGHT)	&kp END			&kp LT		&kp GT		&hm RGUI LBRC	&hm RCTRL RBRC	&sh RSFT BSLH 
									&to BASE	&trans			&trans		&trans				
		>;
	};

	bt_layer {
		label = "Bluetooth";
		bindings = <
	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4	&trans		&out OUT_USB	&ext_power EP_ON	&ext_power EP_TOG	&bootloader	
	&trans		&trans		&trans		&kp LC(LA(DEL))	&bt BT_PRV	&bt BT_NXT	&trans		&ext_power EP_OFF	&trans			&kp LC(LA(DEL))
	&bt BT_CLR	&trans		&trans		&trans		&out OUT_BLE	&trans		&trans		&trans			&trans			&bootloader
							&to BASE	&to BASE			&to CMK	&to CMK				
		>;
	};

	
	fun_layer {
		label = "Fuctions";
		bindings = <
		&kp F1	&kp F2		&kp F3  	&kp F4	&kp F5	&kp F6	&kp F7	&kp F8	&kp F9	&kp F10		
		&kp F11	&kp F12		&trans		&trans	&trans	&trans	&trans	&trans	&trans	&trans
		&kp SLCK &kp PSCRN	&kp PAUSE_BREAK &trans	&trans	&trans	&trans	&trans	&trans	&trans
							&to BASE	&none	&none	&none	
		>;
	};
	
	};
};
